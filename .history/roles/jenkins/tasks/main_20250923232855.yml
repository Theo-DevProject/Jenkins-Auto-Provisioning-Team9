# Prereqs for fetching the key
- name: Ensure repo prerequisites
  apt:
    name:
      - curl
      - gnupg
      - ca-certificates
    state: present
    update_cache: yes
  when: ansible_os_family == "Debian"

# Fetch Jenkins key and store as a keyring (no apt-key)
- name: Download Jenkins apt repo key (ASCII)
  get_url:
    url: https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key
    dest: /usr/share/keyrings/jenkins-keyring.asc
    mode: '0644'
  when: ansible_os_family == "Debian"

- name: Convert Jenkins key to GPG keyring
  command: >
    gpg --dearmor -o /usr/share/keyrings/jenkins-keyring.gpg
    /usr/share/keyrings/jenkins-keyring.asc
  args:
    creates: /usr/share/keyrings/jenkins-keyring.gpg
  when: ansible_os_family == "Debian"

# Add the repo using signed-by
- name: Add Jenkins apt repository (signed-by)
  copy:
    dest: /etc/apt/sources.list.d/jenkins.list
    mode: '0644'
    content: |
      deb [signed-by=/usr/share/keyrings/jenkins-keyring.gpg] https://pkg.jenkins.io/debian-stable binary/
  when: ansible_os_family == "Debian"

# (Optional) Clean any old apt-key entry so we don't fight with it
- name: Remove old Jenkins apt-key entry if present
  command: apt-key del FCEF32E745F2C3D5
  register: _old_key_del
  failed_when: false
  changed_when: "'gpg: key' in _old_key_del.stderr or 'removed' in _old_key_del.stderr"
  when: ansible_os_family == "Debian"

# Proceed as before
- name: apt update & install Jenkins
  apt:
    name: jenkins
    state: present
    update_cache: yes
  when: ansible_os_family == "Debian"
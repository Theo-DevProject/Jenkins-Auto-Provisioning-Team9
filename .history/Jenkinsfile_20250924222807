pipeline {
  agent any
  options { timestamps() }

  environment {
    INVENTORY = "inventory.ini"
    PLAYBOOK  = "deploy-complete-system.yml"
  }

  stages {
    stage('Checkout'){ steps { checkout scm } }

    stage('Install Ansible deps'){
      steps {
        sh '''
          set -e
          if ! command -v ansible >/dev/null 2>&1; then
            sudo apt-get update -y
            sudo apt-get install -y ansible python3-pip
          fi
          ansible-galaxy collection install community.mysql community.general --force
        '''
      }
    }

    stage('Deploy with Ansible'){
      steps {
        withCredentials([sshUserPrivateKey(credentialsId: 'devops-ssh',
                                           keyFileVariable: 'SSH_KEY',
                                           usernameVariable: 'SSH_USER')]) {
          sh '''
            set -e
            export ANSIBLE_HOST_KEY_CHECKING=false
            ansible-playbook "${PLAYBOOK}" -i "${INVENTORY}" \
              -e ansible_ssh_private_key_file="$SSH_KEY" \
              -e ansible_user="$SSH_USER"
          '''
        }
      }
    }
  }

  post { always { archiveArtifacts artifacts: '**/ansible.log', allowEmptyArchive: true } }
}